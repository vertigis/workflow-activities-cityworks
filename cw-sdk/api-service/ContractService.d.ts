import { IApiService } from './i-api-service';
import { ContractServiceTypes as SvcDef } from '../api-interface/ContractService';
import Requests = SvcDef.Requests;
import Responses = SvcDef.Responses;
import IContractService = SvcDef.IContractService;
export declare class ContractService implements IContractService {
    private _service;
    constructor(service: IApiService);
    AddLineItem(request: Requests.AddLineItem): Promise<Responses.AddLineItem>;
    ByIds(request: Requests.ByIds): Promise<Responses.ByIds>;
    Claims(request: Requests.Claims): Promise<Responses.Claims>;
    Create(request: Requests.Create): Promise<Responses.Create>;
    CreateFundSource(request: Requests.CreateFundSource): Promise<Responses.CreateFundSource>;
    CreateSearchDefinition(request: Requests.CreateSearchDefinition): Promise<Responses.CreateSearchDefinition>;
    CreateSubcontractor(request: Requests.CreateSubcontractor): Promise<Responses.CreateSubcontractor>;
    CreateSubmittal(request: Requests.CreateSubmittal): Promise<Responses.CreateSubmittal>;
    Delete(request: Requests.Delete): Promise<Responses.Delete>;
    DeleteFundSource(request: Requests.DeleteFundSource): Promise<Responses.DeleteFundSource>;
    DeleteLineItems(request: Requests.DeleteLineItems): Promise<Responses.DeleteLineItems>;
    DeleteSubcontractor(request: Requests.DeleteSubcontractor): Promise<Responses.DeleteSubcontractor>;
    DeleteSubmittal(request: Requests.DeleteSubmittal): Promise<Responses.DeleteSubmittal>;
    FundSources(request: Requests.FundSources): Promise<Responses.FundSources>;
    LineItems(request: Requests.LineItems): Promise<Responses.LineItems>;
    LineItemSummary(request: Requests.LineItemSummary): Promise<Responses.LineItemSummary>;
    Permits(request: Requests.Permits): Promise<Responses.Permits>;
    Search(request: Requests.Search): Promise<Responses.Search>;
    Subcontractors(request: Requests.Subcontractors): Promise<Responses.Subcontractors>;
    Submittals(request: Requests.Submittals): Promise<Responses.Submittals>;
    UninvoicedLineItemCosts(request: Requests.UninvoicedLineItemCosts): Promise<Responses.UninvoicedLineItemCosts>;
    Update(request: Requests.Update): Promise<Responses.Update>;
    UpdateLineItem(request: Requests.UpdateLineItem): Promise<Responses.UpdateLineItem>;
    UpdateSubcontractor(request: Requests.UpdateSubcontractor): Promise<Responses.UpdateSubcontractor>;
    UpdateSubmittal(request: Requests.UpdateSubmittal): Promise<Responses.UpdateSubmittal>;
    User(request: Requests.User): Promise<Responses.User>;
}
