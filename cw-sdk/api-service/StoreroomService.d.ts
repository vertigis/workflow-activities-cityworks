import { IApiService } from './i-api-service';
import { StoreroomServiceTypes as SvcDef } from '../api-interface/StoreroomService';
import Requests = SvcDef.Requests;
import Responses = SvcDef.Responses;
import IStoreroomService = SvcDef.IStoreroomService;
export declare class StoreroomService implements IStoreroomService {
    private _service;
    constructor(service: IApiService);
    Accounts(request: Requests.Accounts): Promise<Responses.Accounts>;
    AddAudit(request: Requests.AddAudit): Promise<Responses.AddAudit>;
    AddIssue(request: Requests.AddIssue): Promise<Responses.AddIssue>;
    AddReceive(request: Requests.AddReceive): Promise<Responses.AddReceive>;
    AddRequisition(request: Requests.AddRequisition): Promise<Responses.AddRequisition>;
    AddRequisitionItem(request: Requests.AddRequisitionItem): Promise<Responses.AddRequisitionItem>;
    AddSupplier(request: Requests.AddSupplier): Promise<Responses.AddSupplier>;
    AddSupplierMaterial(request: Requests.AddSupplierMaterial): Promise<Responses.AddSupplierMaterial>;
    AddTransfer(request: Requests.AddTransfer): Promise<Responses.AddTransfer>;
    AssemblyMaterial(request: Requests.AssemblyMaterial): Promise<Responses.AssemblyMaterial>;
    BuildAssemblyMaterial(request: Requests.BuildAssemblyMaterial): Promise<Responses.BuildAssemblyMaterial>;
    MaterialsByEmployeeSid(request: Requests.MaterialsByEmployeeSid): Promise<Responses.MaterialsByEmployeeSid>;
    MaterialSearch(request: Requests.MaterialSearch): Promise<Responses.MaterialSearch>;
    RequisitionItems(request: Requests.RequisitionItems): Promise<Responses.RequisitionItems>;
    Requisitions(request: Requests.Requisitions): Promise<Responses.Requisitions>;
    SearchSuppliersByUid(request: Requests.SearchSuppliersByUid): Promise<Responses.SearchSuppliersByUid>;
    StoreDomainsByEmployee(request: Requests.StoreDomainsByEmployee): Promise<Responses.StoreDomainsByEmployee>;
    Storerooms(request: Requests.Storerooms): Promise<Responses.Storerooms>;
    StoreroomSecurity(request: Requests.StoreroomSecurity): Promise<Responses.StoreroomSecurity>;
    StoreroomStocks(request: Requests.StoreroomStocks): Promise<Responses.StoreroomStocks>;
    SupplierMaterial(request: Requests.SupplierMaterial): Promise<Responses.SupplierMaterial>;
    Suppliers(request: Requests.Suppliers): Promise<Responses.Suppliers>;
    UpdateRequisition(request: Requests.UpdateRequisition): Promise<Responses.UpdateRequisition>;
    UpdateStoreroomStock(request: Requests.UpdateStoreroomStock): Promise<Responses.UpdateStoreroomStock>;
    UpdateSupplier(request: Requests.UpdateSupplier): Promise<Responses.UpdateSupplier>;
    UpdateSupplierMaterial(request: Requests.UpdateSupplierMaterial): Promise<Responses.UpdateSupplierMaterial>;
}
